/**
 * This class is generated by jOOQ
 */
package diamond.jooq.demo.model.jooq;


import diamond.jooq.demo.model.jooq.tables.Article;
import diamond.jooq.demo.model.jooq.tables.User;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqDemo extends SchemaImpl {

    private static final long serialVersionUID = 560047945;

    /**
     * The reference instance of <code>jooq-demo</code>
     */
    public static final JooqDemo JOOQ_DEMO = new JooqDemo();

    /**
     * The table <code>jooq-demo.article</code>.
     */
    public final Article ARTICLE = diamond.jooq.demo.model.jooq.tables.Article.ARTICLE;

    /**
     * The table <code>jooq-demo.user</code>.
     */
    public final User USER = diamond.jooq.demo.model.jooq.tables.User.USER;

    /**
     * No further instances allowed
     */
    private JooqDemo() {
        super("jooq-demo", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Article.ARTICLE,
            User.USER);
    }
}
